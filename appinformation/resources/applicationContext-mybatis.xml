<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
			   http://www.springframework.org/schema/beans
			   http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			   http://www.springframework.org/schema/aop
			   http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
			   http://www.springframework.org/schema/context
			   http://www.springframework.org/schema/context/spring-context-3.2.xsd
			    http://www.springframework.org/schema/tx
			   http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<!-- 引入properties文件 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:database.properties" />
	</bean>
	<!-- 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${user}" />
		<property name="password" value="${password}" />
		<property name="initialSize" value="${initialSize}" />
		<property name="maxActive" value="${maxActive}" />
		<property name="maxIdle" value="${maxIdle}" />
		<property name="minIdle" value="${minIdle}" />
		<property name="maxWait" value="${maxWait}" />
		<property name="removeAbandoned" value="${removeAbandoned}" />
		<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="validationQuery" value="select 1" />
		<property name="numTestsPerEvictionRun" value="${maxActive}" />
	</bean>
	
	<!-- SqlSessionFactoryBean 工厂 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 引用数据源 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 引用Mybatis配置文件中的配置 -->
		<property name="configLocation" value="classpath:mybatis-config.xml" />
	</bean>

	<!--通过MapperScannerConfigurer映射器 配置dao -->
	<!-- 自动扫描（数据访问层），并自动创建该层的实现类，并默认命名：接口字母小写 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.jbit.dao" />
	</bean>

	<!-- 业务逻辑注解 -->
	<context:component-scan base-package="cn.jbit.service" />

	<!-- 定义事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 指定管理的数据源 -->
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 配置声明式事务 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="find*" propagation="SUPPORTS" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<!-- 使用AOP指定事务 -->
	<aop:config>
		<!-- 切入点 -->
		<aop:pointcut expression="execution(* cn.jbit.dao.*.*(..))"
			id="pointcut" />
		<!-- 指定切入点与事务 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut" />
	</aop:config>
</beans>